<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="74db5465-bd92-4d0d-8a73-9a9acf6a5bde" created="3.46.1" activeEnvironment="int" encryptionMode="Not encrypted" name="Project 1" compositeProjectFormat="1.3" projectVersion="" updated="3.46.1">
  <con:settings>
    <con:setting id="74db5465-bd92-4d0d-8a73-9a9acf6a5bdefileName">Project-1-readyapi-project</con:setting>
  </con:settings>
  <con:properties>
    <con:property>
      <con:name>ggg</con:name>
    </con:property>
    <con:property>
      <con:name>gggg</con:name>
    </con:property>
    <con:property>
      <con:name>ghhj</con:name>
    </con:property>
    <con:property>
      <con:name>hhhh</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="635e77c1-f222-41b7-a5f3-56994424ca16" name="int" index="0">
    <con:property>
      <con:name>ggg</con:name>
      <con:value>gg</con:value>
    </con:property>
    <con:property>
      <con:name>gggg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>ghhj</con:name>
      <con:value>jj</con:value>
    </con:property>
    <con:property>
      <con:name>hhhh</con:name>
      <con:value>hhjj</con:value>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="5d54c941-94c0-49a1-b3cd-a676d355009d" name="hhh" index="1">
    <con:property>
      <con:name>ggg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>gggg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>ghhj</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>hhhh</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="635e77c1-f222-41b7-a5f3-56994424ca16">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="5d54c941-94c0-49a1-b3cd-a676d355009d">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
